#-------------------------------------------------------------------------------
# HAProxy Configuration - generated by Ansible
#-------------------------------------------------------------------------------
global
    chroot  /var/lib/haproxy
    pidfile /var/run/haproxy.pid
    user    haproxy
    group   haproxy
    daemon

    log     127.0.0.1 local2
    maxconn 4096

defaults
    log     global
    maxconn 4096
    retries 3
    option  httplog
    option  forwardfor
    option  abortonclose
    option  redispatch
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s

{% if haproxy_stats_userlist is defined %}
userlist stats-auth
    group users
    group admins
{% for user in haproxy_stats_userlist %}
    user  {{ user.name }} password {{ user.pass }} groups {{ user.group }}
{% endfor %}
{% endif %}

{% if haproxy_frontends is defined %}
{% for fe in haproxy_frontends %}
frontend {{ fe.name }}
{% for bind in fe.binds %}
{% if bind.ssl is defined %}
    bind               {{ bind.address }}:{{ bind.port }} ssl crt {{ bind.ssl }}
{% else %}
    bind               {{ bind.address }}:{{ bind.port }}
{% endif %}
{% endfor %}
    mode               {{ fe.mode | default('http') }}

{% if fe.stats is defined %}
    stats              enable
    acl AUTH           http_auth(stats-auth)
    acl AUTH_ADMIN     http_auth_group(stats-auth) admins
    stats http-request auth unless AUTH
    stats admin        if AUTH_ADMIN
    stats uri          {{ fe.stats.uri }}
    stats refresh      {{ fe.stats.refresh }}
{% endif %}

{% if fe.acls is defined %}
{% for acl in fe.acls %}
{% if acl.path is defined %}
    acl {{ acl.name }} path_beg {{ acl.path }}
{% else %}
    acl {{ acl.name }} {{ acl.condition }}
{% endif %}
{% endfor %}

{% for acl in fe.acls %}
    use_backend {{ acl.backend }} if {{ acl.name }}
{% endfor %}
{% endif %}

{% if fe.backend is defined %}
    default_backend {{ fe.backend }}
{% endif %}
{% endfor %}
{% endif %}

{% if haproxy_backends is defined %}
{% for be in haproxy_backends %}
backend {{ be.name }}
    mode    {{ be.mode | default('http') }}
    balance {{ be.balance | default('roundrobin') }}
{% for server in be.servers %}
    server  {{ server.name }} {{ server.address }}:{{ server.port }} check
{% endfor %}
{% endfor %}
{% endif %}
